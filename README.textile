webtasks.xml — набор Ant-сценариев для сборки веб-проектов. Содержит в себе определение классов для работы с "YUICompressor":http://developer.yahoo.com/yui/compressor/ и "Google Closure Compiler":http://code.google.com/closure/compiler/, а также набор задач для удобной склейки нескольких файлов в один.

h2. Список задач

h3. &lt;compress-css dir=&quot;/path/to/source/&quot; todir=&quot;/path/to/result/&quot; force=&quot;true | false&quot;&gt;

Минифицирует все CSS-файлы в папке @dir@, сохраняя результат в папку @todir@. Если исходный файл не менялся, то минифицированная версия заново не создаётся, что экономит ресурсы и время при сборке. Можно принудительно генерировать минифицированную версию, указав атрибут @force="true"@.

Особенностью этой этой задачи является замена ссылок ==<code>@import url(_file.css)</code>== на содержимое подключаемого файла. Причём заменяются только те файлы, имя которых начинается с символа подчёркивания. Например, скрипт заменит ссылку ==<code>@import url(_file.css)</code>==, но ==<code>@import url(file.css)</code>== останется как есть.

Пока поддерживается только один уровень вложенности импортов, то есть ссылка ==<code>@import url(_file2.css)</code>== внутри файла @_file.css@ не будет заменена.

h3. &lt;compress-single-file file=&quot;/path/to/file.js&quot; todir=&quot;/path/to dir/&quot; /&gt;

Минифицирует один СSS или JS-файл @file@ и сохраняет результат в папке @todir@

h3. &lt;compress-js-lib tofile=&quot;/path/to/result.js&quot; force=&quot;true | false&quot;&gt;...&lt;/compress-js-lib&gt;

Склеивает и минифицирует через YUICompressor набор JS-файлов в один файл. Список файлов указывается врутри вызова задачи. Так же, как и в @<compress-css/>@ проверяются даты модификации исходных и минифицированных файлов, экономя время и ресурсы при сборке.

Пример вызова:
```xml
<compress-js-lib tofile="${js}/lib.js">
	<filelist dir="${js-src}">
		<file name="file1.js"/>
		<file name="file2.js"/>
	</filelist>
</compress-js-lib>
```

h3. &lt;compress-js-lib-log tofile=&quot;/path/to/result.js&quot; force=&quot;true | false&quot;&gt;...&lt;/compress-js-lib-log&gt;

То же самое, что и @<compress-js-lib/>@, но ведёт лог файлов, из которых состоит сжатый JS-файл.

h2. Что такое «лог файлов»

Лог файлов — это список исходных JS-файлов, из которых состоит сжатый файл. Его очень удобно использовать на production-сервере для отладки скриптов: например, по определённому запросу CMS сайта может выводить не минифицированный файл, а набор исходных файлов. Лог выглядит следующим образом:
==<pre><code>
file:/project/js/compiled-lib1.js
    file:/project/js-src/file1.js
    file:/project/js-src/file2.js
file:/project/js/compiled-lib2.js
    file:/project/js-src/file3.js
    file:/project/js-src/file4.js
</code></pre>==

То есть путь к минифицированному файлу, а под ним — список исходных файлов, отбитых символом табуляции. Этот текстовый файл можно сконвертировать в xml-формат с помощью задачи @<convert-log-to-xml/>@ (см. @webtasks-example.xml@). XML-файл выглягит так:

```xml
<files>
	<file src="/js/compiled-lib1.js">
		<file src="/js-src/file1.js"/>
		<file src="/js-src/file2.js"/>
	</file>
	<file src="/js/compiled-lib2.js">
		<file src="/js-src/file3.js"/>
		<file src="/js-src/file4.js"/>
	</file>
</files>
```